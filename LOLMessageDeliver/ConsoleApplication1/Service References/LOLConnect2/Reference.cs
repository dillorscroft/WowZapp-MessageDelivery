//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.LOLConnect2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="LOLConnect2.LOLMessage")]
    public interface LOLMessage {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/MessageCreate", ReplyAction="urn:LOLMessage/MessageCreateResponse")]
        LOLMessageDelivery.Message MessageCreate(LOLMessageDelivery.Message message, System.Collections.Generic.List<LOLMessageDelivery.MessageStep> messageSteps, System.Collections.Generic.List<System.Guid> toAccountIDs, System.Guid AuthenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/MessageConfirmSend", ReplyAction="urn:LOLMessage/MessageConfirmSendResponse")]
        bool MessageConfirmSend(System.Guid messageID, System.Guid accountID, System.Guid authenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/MessageGetReplyAll", ReplyAction="urn:LOLMessage/MessageGetReplyAllResponse")]
        System.Collections.Generic.List<System.Guid> MessageGetReplyAll(System.Guid messageID, System.Guid authenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/MessageGetNew", ReplyAction="urn:LOLMessage/MessageGetNewResponse")]
        System.Collections.Generic.List<LOLMessageDelivery.Message> MessageGetNew(System.Guid accountID, string deviceID, System.Collections.Generic.List<System.Guid> excludeMessages, System.Guid AuthenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/MessageGetSteps", ReplyAction="urn:LOLMessage/MessageGetStepsResponse")]
        System.Collections.Generic.List<LOLMessageDelivery.MessageStep> MessageGetSteps(System.Guid messageID, System.Guid AuthenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/MessageMarkRead", ReplyAction="urn:LOLMessage/MessageMarkReadResponse")]
        LOLMessageDelivery.General.Error MessageMarkRead(System.Guid messageID, System.Guid accountID, string deviceID, System.Guid AuthenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/MessageGetFrom", ReplyAction="urn:LOLMessage/MessageGetFromResponse")]
        System.Collections.Generic.List<LOLMessageDelivery.Message> MessageGetFrom(System.Guid toAccountID, System.Guid fromAccountID, System.DateTime startDate, System.DateTime endDate, int maxMessages, System.Collections.Generic.List<System.Guid> excludeMessages, System.Guid AuthenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/MessageGetConversations", ReplyAction="urn:LOLMessage/MessageGetConversationsResponse")]
        System.Collections.Generic.List<LOLMessageDelivery.Message> MessageGetConversations(System.Guid accountID, System.DateTime startDate, System.DateTime endDate, int maxMessages, System.Collections.Generic.List<System.Guid> excludeMessages, System.Guid AuthenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/MessageGetStepData", ReplyAction="urn:LOLMessage/MessageGetStepDataResponse")]
        byte[] MessageGetStepData(System.Guid messageID, int stepNumber, System.Guid AuthenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/MessageStepDataSave", ReplyAction="urn:LOLMessage/MessageStepDataSaveResponse")]
        LOLMessageDelivery.General.Error MessageStepDataSave(System.Guid messageID, int stepNumber, byte[] messageStepData, System.Guid authenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/MessagesGetListSentToUser", ReplyAction="urn:LOLMessage/MessagesGetListSentToUserResponse")]
        System.Collections.Generic.List<System.Guid> MessagesGetListSentToUser(System.Guid authenticationToken, System.Guid accountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/PollingStepGet", ReplyAction="urn:LOLMessage/PollingStepGetResponse")]
        LOLMessageDelivery.PollingStep PollingStepGet(System.Guid messageID, int stepNumber, System.Guid accountID, System.Guid authenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/PollingStepSave", ReplyAction="urn:LOLMessage/PollingStepSaveResponse")]
        System.Collections.Generic.List<LOLMessageDelivery.General.Error> PollingStepSave(LOLMessageDelivery.PollingStep pollingStep, System.Guid authenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/PollingStepResponse", ReplyAction="urn:LOLMessage/PollingStepResponseResponse")]
        LOLMessageDelivery.General.Error PollingStepResponse(System.Guid stepID, System.Guid accountID, int responseNumber, System.Guid authenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/PollingStepHasResponded", ReplyAction="urn:LOLMessage/PollingStepHasRespondedResponse")]
        bool PollingStepHasResponded(System.Guid stepID, System.Guid accountID, System.Guid authenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/PollingStepGetResults", ReplyAction="urn:LOLMessage/PollingStepGetResultsResponse")]
        LOLMessageDelivery.LOLMessage.SurveyResult PollingStepGetResults(System.Guid stepID, System.Guid authenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/PollingStepGetResultsList", ReplyAction="urn:LOLMessage/PollingStepGetResultsListResponse")]
        System.Collections.Generic.List<LOLMessageDelivery.LOLMessage.SurveyResult> PollingStepGetResultsList(System.Guid messageID, System.Guid authenticationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/DeleteTestData", ReplyAction="urn:LOLMessage/DeleteTestDataResponse")]
        void DeleteTestData();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LOLMessage/MessageGetStepObject", ReplyAction="urn:LOLMessage/MessageGetStepObjectResponse")]
        string MessageGetStepObject(System.Guid stepID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LOLMessageChannel : ConsoleApplication1.LOLConnect2.LOLMessage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LOLMessageClient : System.ServiceModel.ClientBase<ConsoleApplication1.LOLConnect2.LOLMessage>, ConsoleApplication1.LOLConnect2.LOLMessage {
        
        public LOLMessageClient() {
        }
        
        public LOLMessageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LOLMessageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LOLMessageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LOLMessageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LOLMessageDelivery.Message MessageCreate(LOLMessageDelivery.Message message, System.Collections.Generic.List<LOLMessageDelivery.MessageStep> messageSteps, System.Collections.Generic.List<System.Guid> toAccountIDs, System.Guid AuthenticationToken) {
            return base.Channel.MessageCreate(message, messageSteps, toAccountIDs, AuthenticationToken);
        }
        
        public bool MessageConfirmSend(System.Guid messageID, System.Guid accountID, System.Guid authenticationToken) {
            return base.Channel.MessageConfirmSend(messageID, accountID, authenticationToken);
        }
        
        public System.Collections.Generic.List<System.Guid> MessageGetReplyAll(System.Guid messageID, System.Guid authenticationToken) {
            return base.Channel.MessageGetReplyAll(messageID, authenticationToken);
        }
        
        public System.Collections.Generic.List<LOLMessageDelivery.Message> MessageGetNew(System.Guid accountID, string deviceID, System.Collections.Generic.List<System.Guid> excludeMessages, System.Guid AuthenticationToken) {
            return base.Channel.MessageGetNew(accountID, deviceID, excludeMessages, AuthenticationToken);
        }
        
        public System.Collections.Generic.List<LOLMessageDelivery.MessageStep> MessageGetSteps(System.Guid messageID, System.Guid AuthenticationToken) {
            return base.Channel.MessageGetSteps(messageID, AuthenticationToken);
        }
        
        public LOLMessageDelivery.General.Error MessageMarkRead(System.Guid messageID, System.Guid accountID, string deviceID, System.Guid AuthenticationToken) {
            return base.Channel.MessageMarkRead(messageID, accountID, deviceID, AuthenticationToken);
        }
        
        public System.Collections.Generic.List<LOLMessageDelivery.Message> MessageGetFrom(System.Guid toAccountID, System.Guid fromAccountID, System.DateTime startDate, System.DateTime endDate, int maxMessages, System.Collections.Generic.List<System.Guid> excludeMessages, System.Guid AuthenticationToken) {
            return base.Channel.MessageGetFrom(toAccountID, fromAccountID, startDate, endDate, maxMessages, excludeMessages, AuthenticationToken);
        }
        
        public System.Collections.Generic.List<LOLMessageDelivery.Message> MessageGetConversations(System.Guid accountID, System.DateTime startDate, System.DateTime endDate, int maxMessages, System.Collections.Generic.List<System.Guid> excludeMessages, System.Guid AuthenticationToken) {
            return base.Channel.MessageGetConversations(accountID, startDate, endDate, maxMessages, excludeMessages, AuthenticationToken);
        }
        
        public byte[] MessageGetStepData(System.Guid messageID, int stepNumber, System.Guid AuthenticationToken) {
            return base.Channel.MessageGetStepData(messageID, stepNumber, AuthenticationToken);
        }
        
        public LOLMessageDelivery.General.Error MessageStepDataSave(System.Guid messageID, int stepNumber, byte[] messageStepData, System.Guid authenticationToken) {
            return base.Channel.MessageStepDataSave(messageID, stepNumber, messageStepData, authenticationToken);
        }
        
        public System.Collections.Generic.List<System.Guid> MessagesGetListSentToUser(System.Guid authenticationToken, System.Guid accountID) {
            return base.Channel.MessagesGetListSentToUser(authenticationToken, accountID);
        }
        
        public LOLMessageDelivery.PollingStep PollingStepGet(System.Guid messageID, int stepNumber, System.Guid accountID, System.Guid authenticationToken) {
            return base.Channel.PollingStepGet(messageID, stepNumber, accountID, authenticationToken);
        }
        
        public System.Collections.Generic.List<LOLMessageDelivery.General.Error> PollingStepSave(LOLMessageDelivery.PollingStep pollingStep, System.Guid authenticationToken) {
            return base.Channel.PollingStepSave(pollingStep, authenticationToken);
        }
        
        public LOLMessageDelivery.General.Error PollingStepResponse(System.Guid stepID, System.Guid accountID, int responseNumber, System.Guid authenticationToken) {
            return base.Channel.PollingStepResponse(stepID, accountID, responseNumber, authenticationToken);
        }
        
        public bool PollingStepHasResponded(System.Guid stepID, System.Guid accountID, System.Guid authenticationToken) {
            return base.Channel.PollingStepHasResponded(stepID, accountID, authenticationToken);
        }
        
        public LOLMessageDelivery.LOLMessage.SurveyResult PollingStepGetResults(System.Guid stepID, System.Guid authenticationToken) {
            return base.Channel.PollingStepGetResults(stepID, authenticationToken);
        }
        
        public System.Collections.Generic.List<LOLMessageDelivery.LOLMessage.SurveyResult> PollingStepGetResultsList(System.Guid messageID, System.Guid authenticationToken) {
            return base.Channel.PollingStepGetResultsList(messageID, authenticationToken);
        }
        
        public void DeleteTestData() {
            base.Channel.DeleteTestData();
        }
        
        public string MessageGetStepObject(System.Guid stepID) {
            return base.Channel.MessageGetStepObject(stepID);
        }
    }
}
